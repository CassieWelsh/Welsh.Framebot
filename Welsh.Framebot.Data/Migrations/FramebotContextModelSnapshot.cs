// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Welsh.Framebot.Data;

#nullable disable

namespace Welsh.Framebot.Data.Migrations
{
    [DbContext(typeof(FramebotContext))]
    partial class FramebotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Welsh.Framebot.Data.Models.Bot", b =>
                {
                    b.Property<int>("BotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BotId");

                    b.HasIndex("UserId");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotChannel", b =>
                {
                    b.Property<int>("BotId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("ChannelType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BotId", "ChannelType");

                    b.ToTable("BotChannels");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotState", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BotId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnterMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExitMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("NextStateId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("StateTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StateId");

                    b.HasIndex("BotId");

                    b.HasIndex("StateTypeId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotStateParam", b =>
                {
                    b.Property<int>("ParamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("ParamType")
                        .HasColumnType("INTEGER");

                    b.Property<short>("StateTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ParamId");

                    b.HasIndex("StateTypeId");

                    b.ToTable("StateParams");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotStateParamValue", b =>
                {
                    b.Property<int>("StateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StateId", "ParamId");

                    b.HasIndex("ParamId");

                    b.ToTable("StateParamValues");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotStateType", b =>
                {
                    b.Property<short>("StateTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StateTypeId");

                    b.ToTable("StateTypes");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.Bot", b =>
                {
                    b.HasOne("Welsh.Framebot.Data.Models.User", "User")
                        .WithMany("Bots")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotChannel", b =>
                {
                    b.HasOne("Welsh.Framebot.Data.Models.Bot", "Bot")
                        .WithMany("Channels")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotState", b =>
                {
                    b.HasOne("Welsh.Framebot.Data.Models.Bot", "Bot")
                        .WithMany("States")
                        .HasForeignKey("BotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Welsh.Framebot.Data.Models.BotStateType", "StateType")
                        .WithMany("States")
                        .HasForeignKey("StateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bot");

                    b.Navigation("StateType");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotStateParam", b =>
                {
                    b.HasOne("Welsh.Framebot.Data.Models.BotStateType", "StateType")
                        .WithMany("StateParams")
                        .HasForeignKey("StateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateType");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotStateParamValue", b =>
                {
                    b.HasOne("Welsh.Framebot.Data.Models.BotStateParam", "StateParam")
                        .WithMany()
                        .HasForeignKey("ParamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Welsh.Framebot.Data.Models.BotState", "State")
                        .WithMany("StateParamValues")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");

                    b.Navigation("StateParam");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.Bot", b =>
                {
                    b.Navigation("Channels");

                    b.Navigation("States");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotState", b =>
                {
                    b.Navigation("StateParamValues");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.BotStateType", b =>
                {
                    b.Navigation("StateParams");

                    b.Navigation("States");
                });

            modelBuilder.Entity("Welsh.Framebot.Data.Models.User", b =>
                {
                    b.Navigation("Bots");
                });
#pragma warning restore 612, 618
        }
    }
}
